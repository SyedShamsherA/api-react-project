{"version":3,"sources":["Api.js","App.js","reportWebVitals.js","index.js"],"names":["x","CrudComponent","useState","user","setuser","userId","setuserId","title","settitle","body","setbody","setid","saveInProgress","setsaveInProgress","useEffect","a","axios","get","response","data","handleSubmit","e","preventDefault","updateData","alert","createData","put","id","index","findIndex","row","user1","post","push","handleDelete","delete","filter","onSubmit","type","name","value","onChange","target","disabled","map","onClick","selectedData","onPopulateData","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e291a0cb.chunk.js","sourcesContent":["import React, {useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nvar x=0;\r\n\r\nexport default function CrudComponent() {\r\n    const [user,setuser]=useState([]);\r\n    const [userId,setuserId]=useState('');\r\n    const [title,settitle]=useState('');\r\n    const [body,setbody]=useState('');\r\n    const [id,setid]=useState('');\r\n    const [saveInProgress,setsaveInProgress]=useState(false);\r\n  \r\n\r\n  useEffect ( async () => { \r\n    var response = await axios.get(\r\n      'https://jsonplaceholder.typicode.com/posts'\r\n    );\r\n    await setuser(response.data );\r\n  },[])\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n    if (x) {\r\n      updateData();\r\n      alert('data updated');\r\n    } else {\r\n      createData();\r\n      alert('data created');\r\n    }\r\n  };\r\n\r\n  const updateData = async () => {\r\n    var response = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/posts/${x}`,\r\n      {\r\n        id:x,\r\n        userId: userId,\r\n        title: title,\r\n        body: body,\r\n      }\r\n    );\r\n    var index = user.findIndex((row) => row.id === x);\r\n    var user1 = [...user];\r\n    user1[index] = response.data;\r\n    setuser(user1);\r\n    setuserId('');\r\n    setbody('');\r\n    settitle('');\r\n    setid('');\r\n  };\r\n\r\n  const createData = async () => {\r\n    setsaveInProgress(true);\r\n    var response = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/posts',\r\n      {\r\n        userId:userId,\r\n        title: title,\r\n        body:body,\r\n      }\r\n    );\r\n    var user1 = [...user];\r\n    user1.push(response.data);\r\n    setuser(user1);\r\n    setuserId('');\r\n    setbody('');\r\n    settitle('');\r\n    setsaveInProgress(false);\r\n  };\r\n\r\n const onPopulateData = (id) => {\r\n    var selectedData = user.filter((row) => row.id === id)[0];\r\n    \r\n      x=id;\r\n      setuserId(selectedData.userId);\r\n      settitle(selectedData.title);\r\n      setbody(selectedData.body);\r\n    \r\n  };\r\n\r\n  const handleDelete = async (id ) => {\r\n    var response = await axios.delete(\r\n      `https://jsonplaceholder.typicode.com/posts/${id}`\r\n    );\r\n    var user1 = user.filter((row) => row.id !== id);\r\n    setuser( user1 );\r\n    alert('data deleted');\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <h3> User Form</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label> UserId </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"userId\"\r\n              value={userId}\r\n              onChange={(e) => this.setuserId(e.target.value)}\r\n            />\r\n          </div>{' '}\r\n          <br />\r\n          <div>\r\n            <label> Title </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => settitle(e.target.value)}\r\n            />\r\n          </div>{' '}\r\n          <br />\r\n          <div>\r\n            <label> Body </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"body\"\r\n              value={body}\r\n              onChange={(e) => setbody(e.target.value)}\r\n            />\r\n          </div>{' '}\r\n          <br />\r\n          <button disabled={saveInProgress}> Submit </button>\r\n        </form>\r\n        <h3> Post Data </h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td> UserId </td>\r\n              <td> Title </td>\r\n              <td> Body </td>\r\n              <td> Actions </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {user.map((data) => (\r\n              <tr key={data.id}>\r\n                <td> {data.userId} </td>\r\n                <td> {data.title} </td>\r\n                <td> {data.body} </td>\r\n                <td>\r\n                  <button onClick={() => onPopulateData(data.id)}>\r\n                    {' '}\r\n                    Update{' '}\r\n                  </button>{' '}\r\n                  &nbsp;&nbsp;\r\n                  <button onClick={() => handleDelete(data.id)}>\r\n                    {' '}\r\n                    Delete{' '}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n\r\n","import './App.css';\nimport CrudComponent from './Api';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CrudComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}